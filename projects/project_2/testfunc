int   i,j,k,m,rowx;
double xfac,temp,temp1,amax;
rowx = 0;   /* Keep count of the row interchanges */
for (k=1; k<=N-1; ++k) {

     amax = (double) fabs(a[k][k]) ;
     m = k;
     for (i=k+1; i<=N; i++){   /* Find the row with largest pivot */
               xfac = (double) fabs(a[i][k]);
               if(xfac > amax) {amax = xfac; m=i;}
     }
     if(m != k) {  /* Row interchanges */
                 rowx = rowx+1;
                 temp1 = b[k];
                 b[k]  = b[m];
                 b[m]  = temp1;
                 for(j=k; j<=N; j++) {
                       temp = a[k][j];
                       a[k][j] = a[m][j];
                       a[m][j] = temp;
                 }
      }
       for (i=k+1; i<=N; ++i) {
          xfac = a[i][k]/a[k][k];

               for (j=k+1; j<=N; ++j) {
                   a[i][j] = a[i][j]-xfac*a[k][j];
               }
          b[i] = b[i]-xfac*b[k];
       }
}
