Project 1a
Date Started: 26/01/2016
Name: Yadu Bhageria
CID: 00733164
____________________

Part 1. 

#include <math.h>
#include <stdio.h>

int lin_root(double, double, double *);
int quad_roots(double, double, double, double *, double *);

int main(void) {
	double  a2,a1,a0,r1,r2;
	int quad_case;
	printf("enter coefficients of Linear Equation a2*x^2+a1*x+a0=0\n");
	printf("in the order a2,a1,a0, seperated by spaces\n");
	scanf("%lf %lf %lf",&a2,&a1,&a0);

	quad_case = quad_roots(a2,a1,a0,&r1,&r2);
	switch (quad_case) {
		case -3: printf("The values of a2, a1, a0 were contradictory\n"); break;
		case -2: printf("a2=a1=a0=0 so any real number is a root as the equation is a tautology\n"); break;
		case -1: printf("a2=0 so we are dealing with a linear equation with one root\n r1 = %10.8g (upto 2 decimal places)\n", r1); break;
		case 0: printf("The roots are complex.\n r1 = %10.8g + i %10.8g and r2 = %10.8g - i %10.8g \n", r1,r2,r1,r2); break;
		case 1: printf("There are repeated real roots.\n r1 = r2 = %10.8g \n", r1); break;
		case 2: printf("There are two real roots.\nr1 = %10.8g and r2 = %10.8g \n", r1,r2); break;
	}
}

int lin_root(double a1, double a0, double* r) {
	if (a1==0){
		if (a0==0){
			return(0); // any number is a root
		} else{
			return(-1); // contradictory
		}
	}
	*r = -a0/a1; // real root
	return(1);
}

int quad_roots(double a2, double a1, double a0, double* r1, double* r2){
	double d,dr,four=4,two=2,zero=0;

	if (a2==0) {
		return (-2 + lin_root(a1,a0,r1));
	} else if (a0==0) {
		lin_root(a2,a1,r1);
		if (r1<0) {
			*r2=*r1;
			*r1=zero;
			return(2);
		} else {
			*r2=zero;
			if (*r1==zero) {return (1);} else {return(2);}
		}
	}

	d=a1*a1-four*a2*a0;
	if (d>zero) {
		dr=sqrt(d);
		if (a2>zero) {
			*r1=(-a1+dr)/(two*a2);
			*r2=(-a1-dr)/(two*a2);
		} else {
			*r1=(-a1-dr)/(two*a2);
			*r2=(-a1+dr)/(two*a2);
		}
		return(2);
	}
	else if (d==zero){
		*r1=(-a1)/(two*a2);
		*r2=(-a1)/(two*a2);
		return(1);
	}
	else {
		dr=sqrt(d);
		*r1=(-a1)/(two*a2);
		*r2=(sqrt(-d))/(two*a2);
		return(0);
	}
}

____________________

Part 2.

Mean Radius for Pluto: 1,187km = 1,187,000m
Mean Radius for Charon: 606km = 606,000m
sources: http://nssdc.gsfc.nasa.gov/planetary/factsheet/plutofact.html


enter coefficients of Linear Equation a2*x^2+a1*x+a0=0
in the order a2,a1,a0, seperated by spaces
1 2374000 -1
There are two real roots.
r1 = 4.2122999e-07 and r2 =   -2374000 

1 2374000 -10000
There are two real roots.
r1 = 0.0042122999 and r2 =   -2374000 

1 2374000 -1000000
There are two real roots.
r1 = 0.42122992 and r2 = -2374000.4 

1 2374000 -10000000000
There are two real roots.
r1 =  4204.8522 and r2 = -2378204.9 

1 1212000 -1
There are two real roots.
r1 = 8.2508251e-07 and r2 =   -1212000 

1 1212000 -10000
There are two real roots.
r1 = 0.008250825 and r2 =   -1212000 

There are two real roots.
r1 = 0.82508195 and r2 = -1212000.8 

1 1212000 -10000000000
There are two real roots.
r1 =  8195.4086 and r2 = -1220195.4 

LESS ACCURATE

1 2374000 -1
There are two real roots.
r1 = 4.2119063e-07 and r2 =   -2374000 

1 2374000 -10000
There are two real roots.
r1 = 0.0042122998 and r2 =   -2374000 

1 2374000 -1000000
There are two real roots.
r1 = 0.42122992 and r2 = -2374000.4 

1 2374000 -10000000000
There are two real roots.
r1 =  4204.8522 and r2 = -2378204.9 

1 1212000 -1
There are two real roots.
r1 = 8.2503539e-07 and r2 =   -1212000 

1 1212000 -10000
There are two real roots.
r1 = 0.008250825 and r2 =   -1212000 

1 1212000 -1000000
There are two real roots.
r1 = 0.82508195 and r2 = -1212000.8 

1 1212000 -10000000000
There are two real roots.
r1 =  8195.4086 and r2 = -1220195.4 

In Table Format

╔═══════╦════════════════╦════════════════╦════════════════╦════════════════╗
║       ║ Pluto          ║ Pluto          ║ Charon         ║ Charon         ║
║       ║                ║ More Accurate  ║                ║ More Accurate  ║
╠═══════╬════════════════╬════════════════╬════════════════╬════════════════╣
║ 1m    ║ 4.2119063e-07m ║ 4.2122999e-07m ║ 8.2503539e-07m ║ 8.2508251e-07m ║
╠═══════╬════════════════╬════════════════╬════════════════╬════════════════╣
║ 100m  ║ 0.0042122998m  ║ 0.0042122999m  ║ 0.008250825m   ║ 0.008250825m   ║
╠═══════╬════════════════╬════════════════╬════════════════╬════════════════╣
║ 1km   ║ 0.42122992m    ║ 0.42122992m    ║ 0.82508195m    ║ 0.82508195m    ║
╠═══════╬════════════════╬════════════════╬════════════════╬════════════════╣
║ 100km ║ 4204.8522m     ║ 4204.8522m     ║ 8195.4086m     ║ 8195.4086m     ║
╚═══════╩════════════════╩════════════════╩════════════════╩════════════════╝

For small d, the method (of not ‘adding’ numbers of differing signs) is more accurate to 5 significant numbers.


